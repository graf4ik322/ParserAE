#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from typing import Dict, List, Any

class PromptTemplates:
    """–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ò–ò —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º - –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô"""
    
    @staticmethod
    def create_perfume_question_prompt(user_question: str, perfumes_data: List[Dict[str, Any]]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –æ –ø–∞—Ä—Ñ—é–º–∞—Ö —Å–æ –í–°–ï–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô"""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ü–û–õ–ù–´–ô —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ñ—é–º–æ–≤ (–≤—Å–µ –ø–∞—Ä—Ñ—é–º—ã)
        perfumes_list = []
        factory_analysis = {}
        
        for perfume in perfumes_data:  # –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô
            perfume_line = (
                f"{perfume['name']} | "
                f"{perfume['factory']} | "
                f"{perfume['article']}"
            )
            perfumes_list.append(perfume_line)
            
            # –ê–Ω–∞–ª–∏–∑ —Ñ–∞–±—Ä–∏–∫ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - –í–°–ï —Ñ–∞–±—Ä–∏–∫–∏
            factory = perfume['factory']
            if factory not in factory_analysis:
                factory_analysis[factory] = {'perfume_count': 0, 'quality_levels': set()}
            factory_analysis[factory]['perfume_count'] += 1
            if 'quality' in perfume:
                factory_analysis[factory]['quality_levels'].add(perfume['quality'])
        
        # –í–ï–°–¨ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ñ—é–º–æ–≤ - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        all_perfumes = perfumes_list
        
        # –°–æ–∑–¥–∞–µ–º –ü–û–õ–ù–£–Æ —Å–≤–æ–¥–∫—É –ø–æ –í–°–ï–ú —Ñ–∞–±—Ä–∏–∫–∞–º
        factory_summary = []
        for factory, data in factory_analysis.items():  # –í–°–ï —Ñ–∞–±—Ä–∏–∫–∏
            quality_info = ', '.join(list(data['quality_levels'])) if data['quality_levels'] else '—Å—Ç–∞–Ω–¥–∞—Ä—Ç'
            factory_summary.append(
                f"- {factory}: {data['perfume_count']} –∞—Ä–æ–º–∞—Ç–æ–≤, –∫–∞—á–µ—Å—Ç–≤–æ: {quality_info}"
            )
        
        prompt = f"""–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø–∞—Ä—Ñ—é–º–µ—Ä –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∞—Ä–æ–º–∞—Ç–∞–º —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.

–í–û–ü–†–û–° –ö–õ–ò–ï–ù–¢–ê: "{user_question}"

–í–°–ï –î–û–°–¢–£–ü–ù–´–ï –ê–†–û–ú–ê–¢–´ (–Ω–∞–∑–≤–∞–Ω–∏–µ + —Ñ–∞–±—Ä–∏–∫–∞ + –∞—Ä—Ç–∏–∫—É–ª):
{chr(10).join(all_perfumes)}

–ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –§–ê–ë–†–ò–ö:
{chr(10).join(factory_summary)}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –∏ –≤—ã–±–µ—Ä–∏ 3-5 –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞—Ä–æ–º–∞—Ç–æ–≤ –∏–∑ –í–°–ï–ì–û –∫–∞—Ç–∞–ª–æ–≥–∞
2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞ —É–∫–∞–∂–∏:
   - –ü–æ—á–µ–º—É –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
   - –ù–∞–∏–ª—É—á—à—É—é –§–∞–±—Ä–∏–∫—É-–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –∏ –µ—ë –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
   - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
   - –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: üõí [–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞ aroma-euro.ru](URL)
3. –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ñ–∞–±—Ä–∏–∫–∞–º - –∫–∞–∫–∞—è –ª—É—á—à–µ –ø–µ—Ä–µ–¥–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –Ω—É–∂–Ω–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞
4. –î–æ–±–∞–≤—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏

–í–ê–ñ–ù–û: 
- –í –Ω–∞–∑–≤–∞–Ω–∏–∏ –∞—Ä–æ–º–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∏!
- –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π –∞—Ä—Ç–∏–∫—É–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX], –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤!

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∞—Ä–æ–º–∞—Ç—ã:**

1. **[–ù–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞]** ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
   - –ü–æ—á–µ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç: [–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ]
   - –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ–∞–±—Ä–∏–∫–∏: [–∞–Ω–∞–ª–∏–∑]
   - –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: [–ø—Ä–∞–∫—Ç–∏–∫–∞]
   - üõí [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]

üè≠ **–ê–Ω–∞–ª–∏–∑ —Ñ–∞–±—Ä–∏–∫:**
[–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º]

üí° **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:**
[–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]

–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–º, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–π —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–∞!"""
        
        return prompt
    
    @staticmethod
    def create_quiz_results_prompt(user_profile: Dict[str, Any], 
                                 suitable_perfumes: List[Dict[str, Any]],
                                 edwards_analysis: Dict[str, Any] = None) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–≤–∏–∑–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π - –í–ï–°–¨ –ö–ê–¢–ê–õ–û–ì"""
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        profile_summary = PromptTemplates._analyze_user_profile_detailed(user_profile)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ü–û–õ–ù–´–ô —Å–ø–∏—Å–æ–∫ –í–°–ï–• –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä—Ñ—é–º–æ–≤ - –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô
        perfumes_list = []
        factory_analysis = {}
        
        for perfume in suitable_perfumes:  # –í–°–ï –ø–∞—Ä—Ñ—é–º—ã –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
            perfume_line = (
                f"{perfume['name']} | "
                f"{perfume['factory']} | "
                f"{perfume['article']}"
            )
            perfumes_list.append(perfume_line)
            
            # –ê–Ω–∞–ª–∏–∑ –í–°–ï–• —Ñ–∞–±—Ä–∏–∫
            factory = perfume['factory']
            if factory not in factory_analysis:
                factory_analysis[factory] = {'perfume_count': 0, 'quality_levels': set()}
            factory_analysis[factory]['perfume_count'] += 1
            if 'quality' in perfume:
                factory_analysis[factory]['quality_levels'].add(perfume['quality'])
        
        # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ –í–°–ï–ú —Ñ–∞–±—Ä–∏–∫–∞–º - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        all_factories = []
        for factory, data in factory_analysis.items():  # –í–°–ï —Ñ–∞–±—Ä–∏–∫–∏
            quality_info = ', '.join(list(data['quality_levels'])) if data['quality_levels'] else '—Å—Ç–∞–Ω–¥–∞—Ä—Ç'
            all_factories.append(
                f"- {factory}: {data['perfume_count']} –∞—Ä–æ–º–∞—Ç–æ–≤, –∫–∞—á–µ—Å—Ç–≤–æ: {quality_info}"
            )
        
        perfumes_text = "\n".join(perfumes_list)
        
        prompt = f"""–¢—ã - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞ —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∞—Ä–æ–º–∞—Ç–æ–≤.

{profile_summary}

–í–°–ï –î–û–°–¢–£–ü–ù–´–ï –ê–†–û–ú–ê–¢–´ (–±—Ä–µ–Ω–¥ - –Ω–∞–∑–≤–∞–Ω–∏–µ + —Ñ–∞–±—Ä–∏–∫–∞ + –∞—Ä—Ç–∏–∫—É–ª):
{perfumes_text}

–ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –§–ê–ë–†–ò–ö:
{chr(10).join(all_factories)}

–ó–ê–î–ê–ß–ê:
–°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É –∏–∑ 5-7 –∞—Ä–æ–º–∞—Ç–æ–≤, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —ç—Ç–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –∏–∑ –í–°–ï–ì–û –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.

–ö–†–ò–¢–ï–†–ò–ò –û–¢–ë–û–†–ê:
‚úÖ –ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≥–µ–Ω–¥–µ—Ä—É –∏ –≤–æ–∑—Ä–∞—Å—Ç—É
‚úÖ –ò–¥–µ–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞ –∞—Ä–æ–º–∞—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å
‚úÖ –°–µ–∑–æ–Ω–Ω–∞—è –∏ –≤—Ä–µ–º–µ–Ω–Ω–∞—è —É–º–µ—Å—Ç–Ω–æ—Å—Ç—å
‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏ –∏ –ø–æ–≤–æ–¥–∞–º
‚úÖ –ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –±—é–¥–∂–µ—Ç
‚úÖ –£—á–µ—Ç –æ–ø—ã—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚úÖ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Ñ–∞–±—Ä–∏–∫–∞–º

–í–ê–ñ–ù–û: –í –Ω–∞–∑–≤–∞–Ω–∏–∏ –∞—Ä–æ–º–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∏!

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ **–í–ê–®–ò –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò**

**1. [–ù–ê–ó–í–ê–ù–ò–ï –ê–†–û–ú–ê–¢–ê]** ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
üíé **–ü–æ—á–µ–º—É –∏–¥–µ–∞–ª–µ–Ω:** [–¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ—Ñ–∏–ª—é]
üè≠ **–û —Ñ–∞–±—Ä–∏–∫–µ:** [–∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è]
üí° **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:** [–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã]
‚≠ê **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Ñ–∏–ª—é:** [–ø—Ä–æ—Ü–µ–Ω—Ç –∏–ª–∏ –æ—Ü–µ–Ω–∫–∞]
üõí **[–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞ aroma-euro.ru](PLACEHOLDER_URL)**

[–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞]

üèÜ **–§–ê–ë–†–ò–ö–ò-–õ–ò–î–ï–†–´ –î–õ–Ø –í–ê–®–ï–ì–û –ü–†–û–§–ò–õ–Ø:**
[–ê–Ω–∞–ª–∏–∑ –ª—É—á—à–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏]

üíé **–ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –°–û–í–ï–¢–´:**
[–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É, –Ω–∞–Ω–µ—Å–µ–Ω–∏—é, –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—é]

üéÅ **–ë–û–ù–£–°–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:**
[–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã, —Å–µ–∑–æ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã]

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º–∏ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º–∏."""
        
        return prompt
    
    @staticmethod
    def create_fragrance_info_prompt(fragrance_query: str) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—Ä–æ–º–∞—Ç–µ"""
        
        prompt = f"""–¢—ã - –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç —Å —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—á–µ—Å–∫–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏, –∞–≤—Ç–æ—Ä –∫–Ω–∏–≥ –æ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–∏.

–ó–ê–ü–†–û–°: "{fragrance_query}"

–ó–ê–î–ê–ß–ê:
1. –ò—Å–ø—Ä–∞–≤—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∞—Ä–æ–º–∞—Ç–∞ –∏ –±—Ä–µ–Ω–¥–∞
2. –î–∞–π –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞ –≤ —Å—Ç–∏–ª–µ Fragrantica
3. –î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à–∏ –ø–∏—Ä–∞–º–∏–¥—É –∞—Ä–æ–º–∞—Ç–æ–≤:
   - –í–µ—Ä—Ö–Ω–∏–µ –Ω–æ—Ç—ã (–ø–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ, 15-30 –º–∏–Ω—É—Ç)
   - –°—Ä–µ–¥–Ω–∏–µ –Ω–æ—Ç—ã (—Å–µ—Ä–¥—Ü–µ –∞—Ä–æ–º–∞—Ç–∞, 2-4 —á–∞—Å–∞)  
   - –ë–∞–∑–æ–≤—ã–µ –Ω–æ—Ç—ã (—à–ª–µ–π—Ñ, 6+ —á–∞—Å–æ–≤)
4. –†–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä–æ–º–∞—Ç–∞
5. –û–ø–∏—à–∏ –≤ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ –æ–ª—å—Ñ–∞–∫—Ç–æ—Ä–Ω—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
6. –£–∫–∞–∂–∏ –∏–¥–µ–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
7. –û–ø—Ä–µ–¥–µ–ª–∏ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É
8. –î–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –Ω–∞–Ω–µ—Å–µ–Ω–∏—é –∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—é

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üåü **[–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞]**

üìñ **–û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:**
[–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Å—Ç–∏–ª–µ Fragrantica]

üè∫ **–ü–∏—Ä–∞–º–∏–¥–∞ –∞—Ä–æ–º–∞—Ç–æ–≤:**
‚Ä¢ –í–µ—Ä—Ö–Ω–∏–µ –Ω–æ—Ç—ã: [—Å–ø–∏—Å–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º]
‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ –Ω–æ—Ç—ã: [—Å–ø–∏—Å–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º]
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –Ω–æ—Ç—ã: [—Å–ø–∏—Å–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º]

üìö **–ò—Å—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∏—è:**
[–†–∞—Å—Å–∫–∞–∑ –æ —Å–æ–∑–¥–∞–Ω–∏–∏, –ø–∞—Ä—Ñ—é–º–µ—Ä–µ, –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏]

üé® **–û–ª—å—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ:**
[–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–∞—Ö–Ω–µ—Ç –∞—Ä–æ–º–∞—Ç]

‚è∞ **–ò–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏ –º–µ—Å—Ç–æ:**
‚Ä¢ –°–µ–∑–æ–Ω: [—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]
‚Ä¢ –í—Ä–µ–º—è —Å—É—Ç–æ–∫: [—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]
‚Ä¢ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: [—Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π]

üë• **–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:**
[–ü–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏]

üí° **–°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:**
[–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]

–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–º, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º."""

        return prompt

    @staticmethod
    def _analyze_user_profile_detailed(user_profile: Dict[str, Any]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        gender = "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"
        age_experience = "—Å—Ä–µ–¥–Ω–∏–π –æ–ø—ã—Ç"
        personality = "—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å"
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
        if isinstance(user_profile, dict):
            # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –±–ª–æ–∫–∞–º–∏
            for key, value in user_profile.items():
                if key == "gender" and isinstance(value, list) and value:
                    gender_map = {"female": "–∂–µ–Ω—Å–∫–∏–π", "male": "–º—É–∂—Å–∫–æ–π", "unisex": "—É–Ω–∏—Å–µ–∫—Å"}
                    gender = gender_map.get(value[0], value[0])
                elif key == "age_experience" and isinstance(value, list) and value:
                    exp_map = {
                        "beginner": "–Ω–æ–≤–∏—á–æ–∫ –≤ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–∏", 
                        "intermediate": "—Å—Ä–µ–¥–Ω–∏–π –æ–ø—ã—Ç", 
                        "advanced": "–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä"
                    }
                    age_experience = exp_map.get(value[0], value[0])
                elif key == "personality_type" and isinstance(value, list) and value:
                    pers_map = {
                        "romantic": "—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Ç—É—Ä–∞",
                        "intellectual": "–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–∏–ø",
                        "extrovert": "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å",
                        "introvert": "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å"
                    }
                    personality = pers_map.get(value[0], value[0])
        
        # –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        profile_description = f"""–ü–†–û–§–ò–õ–¨ –ö–õ–ò–ï–ù–¢–ê:
üë§ **–ì–µ–Ω–¥–µ—Ä–Ω–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å:** {gender}
üéì **–û–ø—ã—Ç —Å –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–µ–π:** {age_experience}
üß† **–¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏:** {personality}

üìã **–î–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:**"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        for key, value in user_profile.items():
            if key not in ["gender", "age_experience", "personality_type"] and isinstance(value, list):
                key_formatted = key.replace("_", " ").title()
                values_formatted = ", ".join(value) if value else "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
                profile_description += f"\n‚Ä¢ {key_formatted}: {values_formatted}"
        
        return profile_description

    @staticmethod
    def _analyze_user_profile(user_profile: Dict[str, Any]) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–µ—Ç –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ (legacy –º–µ—Ç–æ–¥)"""
        profile_lines = []
        
        for key, values in user_profile.items():
            if isinstance(values, list):
                formatted_key = key.replace('_', ' ').title()
                formatted_values = ', '.join(values)
                profile_lines.append(f"‚Ä¢ {formatted_key}: {formatted_values}")
            else:
                formatted_key = key.replace('_', ' ').title()
                profile_lines.append(f"‚Ä¢ {formatted_key}: {values}")
        
        return "\n".join(profile_lines)