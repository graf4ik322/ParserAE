#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from typing import Dict, List, Any

class PromptTemplates:
    """–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ò–ò"""
    
    @staticmethod
    def create_perfume_question_prompt(user_question: str, perfumes_data: List[Dict[str, Any]]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –æ –ø–∞—Ä—Ñ—é–º–∞—Ö —Å–æ –í–°–ï–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ñ—é–º–æ–≤ (—Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è)
        perfumes_list = []
        for perfume in perfumes_data:
            perfume_line = (
                f"{perfume['name']} | "
                f"{perfume['factory']} | "
                f"{perfume['article']}"
            )
            perfumes_list.append(perfume_line)
        
        perfumes_text = "\n".join(perfumes_list)
        
        prompt = f"""–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø–∞—Ä—Ñ—é–º–µ—Ä —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è –í–ï–°–¨ –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥.

–í–û–ü–†–û–°: "{user_question}"

–í–°–ï –î–û–°–¢–£–ü–ù–´–ï –ê–†–û–ú–ê–¢–´ (–ù–∞–∑–≤–∞–Ω–∏–µ | –§–∞–±—Ä–∏–∫–∞ | –ê—Ä—Ç–∏–∫—É–ª):
{perfumes_text}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
1. –í—ã–±–µ—Ä–∏ 3-5 –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞—Ä–æ–º–∞—Ç–æ–≤ –∏–∑ –í–°–ï–ì–û –∫–∞—Ç–∞–ª–æ–≥–∞
2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏ –∞—Ä—Ç–∏–∫—É–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX]
3. –û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –∫–∞–∂–¥—ã–π –∞—Ä–æ–º–∞—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
4. –î–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞
5. –£—á–∏—Ç—ã–≤–∞–π –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –±—Ä–µ–Ω–¥, –ø–æ–ª, –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≥—Ä—É–ø–ø—É, —Ü–µ–Ω—É
6. –ï—Å–ª–∏ –µ—Å—Ç—å —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, —É—á–∏—Ç—ã–≤–∞–π –∏—Ö –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
7. –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø–æ–ª, –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä—É–π –∞—Ä–æ–º–∞—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª–∞

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∞—Ä–æ–º–∞—Ç—ã:**

1. **[–ù–∞–∑–≤–∞–Ω–∏–µ]** ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
   - –ë—Ä–µ–Ω–¥: [–±—Ä–µ–Ω–¥]
   - –ü–æ–ª: [–ø–æ–ª]
   - –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞: [–≥—Ä—É–ø–ø–∞]
   - –¶–µ–Ω–∞: [—Ü–µ–Ω–∞]
   - –ü–æ—á–µ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç: [–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ]
   - –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: [–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]

2. **[–ù–∞–∑–≤–∞–Ω–∏–µ]** ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
   - –ë—Ä–µ–Ω–¥: [–±—Ä–µ–Ω–¥]
   - –ü–æ–ª: [–ø–æ–ª]
   - –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞: [–≥—Ä—É–ø–ø–∞]
   - –¶–µ–Ω–∞: [—Ü–µ–Ω–∞]
   - –ü–æ—á–µ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç: [–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ]
   - –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: [–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]

üí° **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
[–û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã, –ª–∞–π—Ñ—Ö–∞–∫–∏ –ø–æ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É]

–í–ê–ñ–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π –∞—Ä—Ç–∏–∫—É–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX] –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞!"""
        
        return prompt
    
    @staticmethod
    def create_quiz_results_prompt(user_profile: Dict[str, Any], suitable_perfumes: List[Dict[str, Any]]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–≤–∏–∑–∞ —Å–æ –í–°–ï–ú–ò –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ –ø–∞—Ä—Ñ—é–º–∞–º–∏"""
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        profile_summary = PromptTemplates._analyze_user_profile(user_profile)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä—Ñ—é–º–æ–≤ (—Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è)
        perfumes_list = []
        for perfume in suitable_perfumes:
            perfume_line = (
                f"{perfume['name']} | "
                f"{perfume['factory']} | "
                f"{perfume['article']}"
            )
            perfumes_list.append(perfume_line)
        
        perfumes_text = "\n".join(perfumes_list)
        
        prompt = f"""–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø–∞—Ä—Ñ—é–º–µ—Ä. –°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–ü–†–û–§–ò–õ–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
{profile_summary}

–í–°–ï –ü–û–î–•–û–î–Ø–©–ò–ï –ê–†–û–ú–ê–¢–´ (–ù–∞–∑–≤–∞–Ω–∏–µ | –§–∞–±—Ä–∏–∫–∞ | –ê—Ä—Ç–∏–∫—É–ª):
{perfumes_text}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
1. –í—ã–±–µ—Ä–∏ 5-7 –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞—Ä–æ–º–∞—Ç–æ–≤ –∏–∑ –í–°–ï–ì–û –∫–∞—Ç–∞–ª–æ–≥–∞
2. –û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –∫–∞–∂–¥—ã–π –∞—Ä–æ–º–∞—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ —ç—Ç–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é
3. –£—á–∏—Ç—ã–≤–∞–π –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –±—Ä–µ–Ω–¥, –ø–æ–ª, –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≥—Ä—É–ø–ø—É, —Ü–µ–Ω—É, –∫–∞—á–µ—Å—Ç–≤–æ
4. –î–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
5. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π –∞—Ä—Ç–∏–∫—É–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX]
6. –†–∞–Ω–∂–∏—Ä—É–π –∞—Ä–æ–º–∞—Ç—ã –ø–æ —Å—Ç–µ–ø–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ—Ñ–∏–ª—é

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å:**

1. **[–ù–∞–∑–≤–∞–Ω–∏–µ]** ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
   - –ë—Ä–µ–Ω–¥: [–±—Ä–µ–Ω–¥]
   - –ü–æ–ª: [–ø–æ–ª]
   - –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞: [–≥—Ä—É–ø–ø–∞]
   - –ö–∞—á–µ—Å—Ç–≤–æ: [–∫–∞—á–µ—Å—Ç–≤–æ]
   - –¶–µ–Ω–∞: [—Ü–µ–Ω–∞]
   - –ü–æ—á–µ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞—à–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é: [–¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ]
   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: [–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã]

üí° **–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:**
[–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–∞—Ä—Ñ—é–º–æ–≤, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∏–º–µ–Ω–Ω–æ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é]

–í–ê–ñ–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π –∞—Ä—Ç–∏–∫—É–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX] –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞!"""
        
        return prompt
    
    @staticmethod
    def create_fragrance_info_prompt(query: str, matching_perfumes: List[Dict[str, Any]]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—Ä–æ–º–∞—Ç–µ"""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞—Ä–æ–º–∞—Ç–æ–≤
        perfumes_list = []
        for perfume in matching_perfumes:
            perfume_line = (
                f"{perfume['name']} | "
                f"{perfume['factory']} | "
                f"{perfume['article']} | "
                f"{perfume['price_formatted']} | "
                f"{perfume['brand']} | "
                f"{perfume['gender']} | "
                f"{perfume['fragrance_group']} | "
                f"{perfume['quality_level']}"
            )
            perfumes_list.append(perfume_line)
        
        perfumes_text = "\n".join(perfumes_list)
        
        prompt = f"""–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø–∞—Ä—Ñ—é–º–µ—Ä. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—Ä–æ–º–∞—Ç–∞—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: "{query}"

–ù–ê–ô–î–ï–ù–ù–´–ï –ê–†–û–ú–ê–¢–´ (–ù–∞–∑–≤–∞–Ω–∏–µ | –§–∞–±—Ä–∏–∫–∞ | –ê—Ä—Ç–∏–∫—É–ª | –¶–µ–Ω–∞ | –ë—Ä–µ–Ω–¥ | –ü–æ–ª | –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞ | –ö–∞—á–µ—Å—Ç–≤–æ):
{perfumes_text}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
1. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–º –∞—Ä–æ–º–∞—Ç–µ
2. –†–∞—Å—Å–∫–∞–∂–∏ –æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏
3. –£–∫–∞–∂–∏ –∞—Ä—Ç–∏–∫—É–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX]
4. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –º–Ω–æ–≥–æ –∞—Ä–æ–º–∞—Ç–æ–≤, —Å–≥—Ä—É–ø–ø–∏—Ä—É–π –∏—Ö –ø–æ –±—Ä–µ–Ω–¥–∞–º –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
5. –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –º–µ–∂–¥—É –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üîç **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—Ä–æ–º–∞—Ç–∞—Ö:**

**[–ù–∞–∑–≤–∞–Ω–∏–µ]** ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
- –ë—Ä–µ–Ω–¥: [–±—Ä–µ–Ω–¥]
- –ü–æ–ª: [–ø–æ–ª]
- –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞: [–≥—Ä—É–ø–ø–∞]
- –ö–∞—á–µ—Å—Ç–≤–æ: [–∫–∞—á–µ—Å—Ç–≤–æ]  
- –¶–µ–Ω–∞: [—Ü–µ–Ω–∞]
- –û–ø–∏—Å–∞–Ω–∏–µ: [–ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—Ä–æ–º–∞—Ç–µ]
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: [—Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é]

üí° **–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É:**
[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤]

–í–ê–ñ–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π –∞—Ä—Ç–∏–∫—É–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX] –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞!"""
        
        return prompt
    
    @staticmethod
    def _analyze_user_profile(profile: Dict[str, Any]) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"""
        summary_parts = []
        
        # –ü–æ–ª
        if 'gender' in profile:
            summary_parts.append(f"–ü–æ–ª: {profile['gender']}")
        
        # –í–æ–∑—Ä–∞—Å—Ç
        if 'age_group' in profile:
            summary_parts.append(f"–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞: {profile['age_group']}")
        
        # –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∞—Ä–æ–º–∞—Ç–∞–º
        if 'preferred_fragrance_groups' in profile:
            groups = profile['preferred_fragrance_groups']
            if isinstance(groups, list):
                summary_parts.append(f"–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –≥—Ä—É–ø–ø—ã –∞—Ä–æ–º–∞—Ç–æ–≤: {', '.join(groups)}")
            else:
                summary_parts.append(f"–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –≥—Ä—É–ø–ø—ã –∞—Ä–æ–º–∞—Ç–æ–≤: {groups}")
        
        # –ë—é–¥–∂–µ—Ç
        if 'budget' in profile:
            summary_parts.append(f"–ë—é–¥–∂–µ—Ç: {profile['budget']}")
        
        # –ü–æ–≤–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if 'occasion' in profile:
            summary_parts.append(f"–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–≤–æ–¥—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {profile['occasion']}")
        
        # –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å
        if 'intensity_preference' in profile:
            summary_parts.append(f"–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: {profile['intensity_preference']}")
        
        # –í—Ä–µ–º—è –≥–æ–¥–∞
        if 'season_preference' in profile:
            summary_parts.append(f"–õ—é–±–∏–º–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞ –¥–ª—è –∞—Ä–æ–º–∞—Ç–æ–≤: {profile['season_preference']}")
        
        # –û–ø—ã—Ç —Å –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–µ–π
        if 'experience_level' in profile:
            summary_parts.append(f"–û–ø—ã—Ç —Å –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–µ–π: {profile['experience_level']}")
        
        if not summary_parts:
            return "–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω"
        
        return "\n".join([f"‚Ä¢ {part}" for part in summary_parts])
    
    @staticmethod
    def optimize_large_prompt(perfumes_data: List[Dict[str, Any]], max_perfumes: int = 5000) -> str:
        """–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
        if len(perfumes_data) <= max_perfumes:
            return PromptTemplates._format_all_perfumes_detailed(perfumes_data)
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –±—Ä–µ–Ω–¥–∞–º
        grouped_perfumes = PromptTemplates._group_perfumes_by_brand(perfumes_data)
        
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É
        summary = PromptTemplates._create_brand_summary(grouped_perfumes)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Å–∂–∞—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        full_list = PromptTemplates._format_all_perfumes_compact(perfumes_data)
        
        return f"{summary}\n\n–ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö –ê–†–û–ú–ê–¢–û–í:\n{full_list}"
    
    @staticmethod
    def _group_perfumes_by_brand(perfumes_data: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:
        """–ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –ø–∞—Ä—Ñ—é–º—ã –ø–æ –±—Ä–µ–Ω–¥–∞–º"""
        groups = {}
        for perfume in perfumes_data:
            brand = perfume['brand']
            if brand not in groups:
                groups[brand] = []
            groups[brand].append(perfume)
        return groups
    
    @staticmethod
    def _create_brand_summary(grouped_perfumes: Dict[str, List[Dict[str, Any]]]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –ø–æ –±—Ä–µ–Ω–¥–∞–º"""
        summary = "–ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê –ü–û –ë–†–ï–ù–î–ê–ú:\n"
        
        for brand, perfumes in grouped_perfumes.items():
            summary += f"\n{brand}: {len(perfumes)} –∞—Ä–æ–º–∞—Ç–æ–≤"
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
            for i, perfume in enumerate(perfumes[:3]):
                summary += f"\n  - {perfume['name']} ({perfume['factory']}) [–ê—Ä—Ç–∏–∫—É–ª: {perfume['article']}]"
        
        return summary
    
    @staticmethod
    def _format_all_perfumes_detailed(perfumes_data: List[Dict[str, Any]]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –ø–∞—Ä—Ñ—é–º—ã —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
        perfumes_list = []
        for perfume in perfumes_data:
            perfume_line = (
                f"{perfume['name']} | "
                f"{perfume['factory']} | "
                f"{perfume['article']} | "
                f"{perfume['price_formatted']} | "
                f"{perfume['brand']} | "
                f"{perfume['gender']} | "
                f"{perfume['fragrance_group']}"
            )
            perfumes_list.append(perfume_line)
        return "\n".join(perfumes_list)
    
    @staticmethod
    def _format_all_perfumes_compact(perfumes_data: List[Dict[str, Any]]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –ø–∞—Ä—Ñ—é–º—ã –≤ —Å–∂–∞—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        perfumes_list = []
        for perfume in perfumes_data:
            perfume_line = f"{perfume['name']} ({perfume['brand']}) [{perfume['article']}] - {perfume['price_formatted']}"
            perfumes_list.append(perfume_line)
        return "\n".join(perfumes_list)