#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

class ConfigAdvanced:
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–Ω—ã—Ö –ë–î"""
    
    def __init__(self):
        # Telegram Bot
        self.bot_token = os.getenv('TELEGRAM_BOT_TOKEN', '')
        if not self.bot_token or self.bot_token == 'your_telegram_bot_token_here':
            raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        # OpenRouter API
        self.openrouter_api_key = os.getenv('OPENROUTER_API_KEY', '')
        if not self.openrouter_api_key or self.openrouter_api_key == 'your_openrouter_api_key_here':
            raise ValueError("OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        # –ê–¥–º–∏–Ω
        admin_user_id_str = os.getenv('ADMIN_USER_ID', '0')
        if admin_user_id_str == '123456789' or admin_user_id_str == '0':
            raise ValueError("ADMIN_USER_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        self.admin_user_id = int(admin_user_id_str)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.db_type = os.getenv('DB_TYPE', 'sqlite')  # sqlite, postgresql, mysql
        
        if self.db_type == 'sqlite':
            # SQLite - —Ñ–∞–π–ª–æ–≤–∞—è –ë–î, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è
            self.database_path = os.getenv('DATABASE_PATH', 'data/perfumes.db')
            self.db_host = None
            self.db_port = None
            self.db_name = None
            self.db_user = None
            self.db_password = None
            
        elif self.db_type in ['postgresql', 'mysql']:
            # PostgreSQL/MySQL - —Ç—Ä–µ–±—É—é—Ç –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å
            self.db_host = os.getenv('DB_HOST', 'localhost')
            self.db_port = int(os.getenv('DB_PORT', '5432' if self.db_type == 'postgresql' else '3306'))
            self.db_name = os.getenv('DB_NAME', 'perfumes_db')
            self.db_user = os.getenv('DB_USER', '')
            self.db_password = os.getenv('DB_PASSWORD', '')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ë–î
            if not self.db_user:
                raise ValueError(f"DB_USER –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è {self.db_type}")
            if not self.db_password:
                raise ValueError(f"DB_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è {self.db_type}")
                
            self.database_path = None
            
        else:
            raise ValueError(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –ë–î: {self.db_type}")
        
        # API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.api_cooldown_seconds = int(os.getenv('API_COOLDOWN_SECONDS', '30'))
        self.max_tokens_per_request = int(os.getenv('MAX_TOKENS_PER_REQUEST', '8000'))
        
        # –ü–∞—Ä—Å–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.parse_interval_hours = int(os.getenv('PARSE_INTERVAL_HOURS', '6'))
        self.parser_max_workers = int(os.getenv('PARSER_MAX_WORKERS', '3'))
        
        # –†–µ–∂–∏–º –±–µ–∑ –ª–∏–º–∏—Ç–æ–≤
        self.use_all_perfumes = True
        self.no_limits_mode = True
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenRouter
        self.openrouter_model = os.getenv('OPENROUTER_MODEL', 'openai/gpt-4-turbo-preview')
        self.openrouter_base_url = 'https://openrouter.ai/api/v1'
        
        # –ü–∞—Ä—Å–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.aroma_euro_base_url = 'https://aroma-euro.ru'
        self.aroma_euro_catalog_url = 'https://aroma-euro.ru/perfume/'
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
        self.cache_ttl_seconds = int(os.getenv('CACHE_TTL_SECONDS', '3600'))
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        self.log_level = os.getenv('LOG_LEVEL', 'INFO')
        self.log_file = os.getenv('LOG_FILE', 'perfume_bot.log')
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.request_timeout = int(os.getenv('REQUEST_TIMEOUT', '30'))
        self.max_retries = int(os.getenv('MAX_RETRIES', '3'))
    
    def get_database_url(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"""
        if self.db_type == 'sqlite':
            return f"sqlite:///{self.database_path}"
        elif self.db_type == 'postgresql':
            return f"postgresql://{self.db_user}:{self.db_password}@{self.db_host}:{self.db_port}/{self.db_name}"
        elif self.db_type == 'mysql':
            return f"mysql://{self.db_user}:{self.db_password}@{self.db_host}:{self.db_port}/{self.db_name}"
        else:
            raise ValueError(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –ë–î: {self.db_type}")
    
    def __str__(self):
        """–°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        db_info = f"üóÑÔ∏è Database: {self.db_type}"
        if self.db_type == 'sqlite':
            db_info += f" ({self.database_path})"
        else:
            db_info += f" ({self.db_host}:{self.db_port}/{self.db_name})"
        
        return f"""
üìã –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Perfume Bot:
‚îú‚îÄ‚îÄ ü§ñ Bot Token: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if self.bot_token else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
‚îú‚îÄ‚îÄ üß† OpenRouter API: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if self.openrouter_api_key else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
‚îú‚îÄ‚îÄ üë§ Admin ID: {self.admin_user_id}
‚îú‚îÄ‚îÄ {db_info}
‚îú‚îÄ‚îÄ ‚è±Ô∏è API Cooldown: {self.api_cooldown_seconds}s
‚îú‚îÄ‚îÄ üéØ Max Tokens: {self.max_tokens_per_request}
‚îú‚îÄ‚îÄ üîÑ Parse Interval: {self.parse_interval_hours}h
‚îú‚îÄ‚îÄ üöÄ No Limits Mode: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if self.no_limits_mode else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω'}
‚îî‚îÄ‚îÄ üìù Log Level: {self.log_level}
        """.strip()

# –ü—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ë–î
ENV_EXAMPLES = """
# –î–ª—è SQLite (—Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç)
DB_TYPE=sqlite
DATABASE_PATH=data/perfumes.db

# –î–ª—è PostgreSQL
DB_TYPE=postgresql
DB_HOST=localhost
DB_PORT=5432
DB_NAME=perfumes_db
DB_USER=perfume_user
DB_PASSWORD=your_secure_password

# –î–ª—è MySQL
DB_TYPE=mysql
DB_HOST=localhost
DB_PORT=3306
DB_NAME=perfumes_db
DB_USER=perfume_user
DB_PASSWORD=your_secure_password
"""