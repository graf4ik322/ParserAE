#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from typing import Dict, List, Any, Optional
from dataclasses import dataclass
from enum import Enum

class QuizCategory(Enum):
    """–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–≤–∏–∑–∞"""
    BASIC_PROFILE = "basic_profile"
    PSYCHOLOGICAL_TYPE = "psychological_type"
    SCENT_PREFERENCES = "scent_preferences"
    USAGE_CONTEXT = "usage_context"
    PERSONAL_STYLE = "personal_style"

@dataclass
class QuizQuestion:
    """–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞"""
    id: str
    category: QuizCategory
    text: str
    options: List[str]
    key: str
    depends_on: Optional[str] = None

class PerfumeQuizSystem:
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–≤–∏–∑–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä—Ñ—é–º–æ–≤"""
    
    def __init__(self):
        self.questions = self._create_enhanced_quiz_questions()
        self.adaptive_questions = self._create_adaptive_questions()
        self.question_flow = self._create_question_flow()
    
    def _create_enhanced_quiz_questions(self) -> List[QuizQuestion]:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è"""
        return [
            # –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            QuizQuestion(
                id="target_person",
                category=QuizCategory.BASIC_PROFILE,
                text="üë§ –î–ª—è –∫–æ–≥–æ –ø–æ–¥–±–∏—Ä–∞–µ–º –∞—Ä–æ–º–∞—Ç?",
                options=[
                    "–î–ª—è —Å–µ–±—è (–∂–µ–Ω—â–∏–Ω–∞)", 
                    "–î–ª—è —Å–µ–±—è (–º—É–∂—á–∏–Ω–∞)", 
                    "–î–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞/–ø–∞—Ä—Ç–Ω–µ—Ä—à–∏",
                    "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫"
                ],
                key="target_person"
            ),
            
            QuizQuestion(
                id="age_personality",
                category=QuizCategory.BASIC_PROFILE,
                text="üé≠ –ö–∞–∫ –±—ã –≤—ã –æ–ø–∏—Å–∞–ª–∏ —Å–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä?",
                options=[
                    "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", 
                    "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∏ —É—Ç–æ–Ω—á–µ–Ω–Ω—ã–π", 
                    "–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∏ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π",
                    "–°–ø–æ–∫–æ–π–Ω—ã–π –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–π"
                ],
                key="personality_type"
            ),
            
            # –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–∏–ø (–Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è Mintel)
            QuizQuestion(
                id="fragrance_motivation",
                category=QuizCategory.PSYCHOLOGICAL_TYPE,
                text="üß† –ß—Ç–æ –¥–ª—è –≤–∞—Å –≥–ª–∞–≤–Ω–æ–µ –≤ –∞—Ä–æ–º–∞—Ç–µ?",
                options=[
                    "–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ",
                    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å",
                    "–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è",
                    "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
                ],
                key="consumer_type"
            ),
            
            QuizQuestion(
                id="scent_discovery",
                category=QuizCategory.PSYCHOLOGICAL_TYPE,
                text="üåü –ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –Ω–æ–≤—ã–º –∞—Ä–æ–º–∞—Ç–∞–º?",
                options=[
                    "–û–±–æ–∂–∞—é —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –Ω–æ–≤–∏–Ω–∫–∞–º–∏",
                    "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∫–ª–∞—Å—Å–∏–∫—É",
                    "–í—ã–±–∏—Ä–∞—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é",
                    "–î–æ–≤–µ—Ä—è—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º —ç–∫—Å–ø–µ—Ä—Ç–æ–≤"
                ],
                key="innovation_attitude"
            ),
            
            # –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∞—Ä–æ–º–∞—Ç–∞–º (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
            QuizQuestion(
                id="scent_family_detailed",
                category=QuizCategory.SCENT_PREFERENCES,
                text="üå∫ –ö–∞–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã –≤—ã–∑—ã–≤–∞—é—Ç —É –≤–∞—Å –ø—Ä–∏—è—Ç–Ω—ã–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏?",
                options=[
                    "–¶–≤–µ—Ç–æ—á–Ω–∞—è —Å–≤–µ–∂–µ—Å—Ç—å",
                    "–¢–µ–ø–ª—ã–µ —É—é—Ç–Ω—ã–µ –Ω–æ—Ç—ã",
                    "–¶–∏—Ç—Ä—É—Å–æ–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è",
                    "–ë–ª–∞–≥–æ—Ä–æ–¥–Ω–æ–µ –¥–µ—Ä–µ–≤–æ",
                    "–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä—è–Ω–æ—Å—Ç–∏",
                    "–ú–æ—Ä—Å–∫–∞—è —Å–≤–µ–∂–µ—Å—Ç—å"
                ],
                key="scent_family"
            ),
            
            QuizQuestion(
                id="scent_intensity",
                category=QuizCategory.SCENT_PREFERENCES,
                text="üí® –ö–∞–∫–æ–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∞—Ä–æ–º–∞—Ç–∞?",
                options=[
                    "–î–µ–ª–∏–∫–∞—Ç–Ω–∞—è - —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–Ω—è",
                    "–£–º–µ—Ä–µ–Ω–Ω–∞—è - –ø—Ä–∏—è—Ç–Ω—ã–π —à–ª–µ–π—Ñ",
                    "–ó–∞–º–µ—Ç–Ω–∞—è - —á—Ç–æ–±—ã –∑–∞–ø–æ–º–Ω–∏–ª–∏—Å—å",
                    "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è - —è—Ä–∫–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ"
                ],
                key="intensity_preference"
            ),
            
            QuizQuestion(
                id="longevity_importance",
                category=QuizCategory.SCENT_PREFERENCES,
                text="‚è∞ –ù–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–∞ —Å—Ç–æ–π–∫–æ—Å—Ç—å –∞—Ä–æ–º–∞—Ç–∞?",
                options=[
                    "–ö—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–Ω–∞ (8+ —á–∞—Å–æ–≤)",
                    "–í–∞–∂–Ω–∞ (4-6 —á–∞—Å–æ–≤)",
                    "–£–º–µ—Ä–µ–Ω–Ω–æ –≤–∞–∂–Ω–∞ (2-4 —á–∞—Å–∞)",
                    "–ù–µ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ"
                ],
                key="longevity_need"
            ),
            
            # –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
            QuizQuestion(
                id="primary_usage",
                category=QuizCategory.USAGE_CONTEXT,
                text="üéØ –í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç —á–∞—â–µ –≤—Å–µ–≥–æ?",
                options=[
                    "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–∞ —Ä–∞–±–æ—Ç–µ",
                    "–û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏",
                    "–°–≤–∏–¥–∞–Ω–∏—è",
                    "–î–æ–º–∞ –¥–ª—è —Å–µ–±—è",
                    "–°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö"
                ],
                key="usage_context"
            ),
            
            QuizQuestion(
                id="seasonal_preference",
                category=QuizCategory.USAGE_CONTEXT,
                text="üå°Ô∏è –ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç?",
                options=[
                    "–ö—Ä—É–≥–ª—ã–π –≥–æ–¥",
                    "–í–µ—Å–Ω–∞-–ª–µ—Ç–æ",
                    "–û—Å–µ–Ω—å-–∑–∏–º–∞",
                    "–ü–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é"
                ],
                key="seasonal_usage"
            ),
            
            # –õ–∏—á–Ω—ã–π —Å—Ç–∏–ª—å
            QuizQuestion(
                id="style_association",
                category=QuizCategory.PERSONAL_STYLE,
                text="üëó –í–∞—à —Å—Ç–∏–ª—å –≤ –æ–¥–µ–∂–¥–µ –±–ª–∏–∂–µ –∫:",
                options=[
                    "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π",
                    "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π",
                    "–Ø—Ä–∫–∏–π –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π",
                    "–£–¥–æ–±–Ω—ã–π –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π",
                    "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π"
                ],
                key="style_preference"
            ),
            
            QuizQuestion(
                id="social_impact",
                category=QuizCategory.PERSONAL_STYLE,
                text="üë• –ö–∞–∫ –∞—Ä–æ–º–∞—Ç –¥–æ–ª–∂–µ–Ω –≤–ª–∏—è—Ç—å –Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö?",
                options=[
                    "–°–æ–∑–¥–∞–≤–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É—é—Ç–∞ –∏ –¥–æ–≤–µ—Ä–∏—è",
                    "–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å –º–æ—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å",
                    "–ü—Ä–∏–≤–ª–µ–∫–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å",
                    "–û—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–º –¥–ª—è –¥—Ä—É–≥–∏—Ö"
                ],
                key="social_impact"
            ),
            
            QuizQuestion(
                id="quality_priority",
                category=QuizCategory.PERSONAL_STYLE,
                text="‚≠ê –ß—Ç–æ –¥–ª—è –≤–∞—Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–µ–µ?",
                options=[
                    "–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–µ–¥–∫–æ—Å—Ç—å –∞—Ä–æ–º–∞—Ç–∞",
                    "–ö–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å—Ç–æ–π–∫–æ—Å—Ç—å",
                    "–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤",
                    "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ"
                ],
                key="quality_focus"
            )
        ]
    
    def _create_question_flow(self) -> Dict[str, List[str]]:
        """–°–æ–∑–¥–∞–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ—Ç–æ–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤"""
        return {
            "start": ["target_person", "age_personality"],
            "profile_complete": ["fragrance_motivation", "scent_discovery"],
            "psychology_complete": ["scent_family_detailed", "scent_intensity"],
            "scent_preferences_complete": ["longevity_importance", "primary_usage"],
            "usage_complete": ["seasonal_preference", "style_association"],
            "style_complete": ["social_impact", "quality_priority"],
            "end": []
        }
    
    def _create_adaptive_questions(self) -> Dict[str, List[QuizQuestion]]:
        """–°–æ–∑–¥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏"""
        return {
            "–î–ª—è —Å–µ–±—è (–∂–µ–Ω—â–∏–Ω–∞)": [
                QuizQuestion(
                    id="female_occasion",
                    category=QuizCategory.USAGE_CONTEXT,
                    text="‚ú® –í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç?",
                    options=[
                        "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–∞ —Ä–∞–±–æ—Ç—É",
                        "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–∏–¥–∞–Ω–∏—è",
                        "–í–µ—á–µ—Ä–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
                        "–î–ª—è —Å–µ–±—è –¥–æ–º–∞"
                    ],
                    key="female_occasion"
                ),
                QuizQuestion(
                    id="female_style",
                    category=QuizCategory.PERSONAL_STYLE,
                    text="üëó –í–∞—à —Å—Ç–∏–ª—å –≤ –æ–±—Ä–∞–∑–∞—Ö:",
                    options=[
                        "–ö–ª–∞—Å—Å–∏–∫–∞ –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å",
                        "–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ—Å—Ç—å",
                        "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∏–Ω–∏–º–∞–ª–∏–∑–º",
                        "–Ø—Ä–∫–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"
                    ],
                    key="female_style"
                )
            ],
            "–î–ª—è —Å–µ–±—è (–º—É–∂—á–∏–Ω–∞)": [
                QuizQuestion(
                    id="male_occasion",
                    category=QuizCategory.USAGE_CONTEXT,
                    text="üéØ –ì–¥–µ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç?",
                    options=[
                        "–û—Ñ–∏—Å –∏ –¥–µ–ª–æ–≤—ã–µ –≤—Å—Ç—Ä–µ—á–∏",
                        "–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö", 
                        "–í–µ—á–µ—Ä–Ω–∏–µ –≤—ã—Ö–æ–¥—ã",
                        "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ"
                    ],
                    key="male_occasion"
                ),
                QuizQuestion(
                    id="male_character",
                    category=QuizCategory.PERSONAL_STYLE,
                    text="üí™ –ö–∞–∫ –±—ã –≤–∞—Å –æ–ø–∏—Å–∞–ª–∏ –¥—Ä—É–∑—å—è?",
                    options=[
                        "–£–≤–µ—Ä–µ–Ω–Ω—ã–π –ª–∏–¥–µ—Ä",
                        "–ù–∞–¥–µ–∂–Ω—ã–π –¥—Ä—É–≥",
                        "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å",
                        "–°–ø–æ–∫–æ–π–Ω—ã–π –∏ –º—É–¥—Ä—ã–π"
                    ],
                    key="male_character"
                )
            ],
            "–î–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞/–ø–∞—Ä—Ç–Ω–µ—Ä—à–∏": [
                QuizQuestion(
                    id="partner_type",
                    category=QuizCategory.BASIC_PROFILE,
                    text="üíï –í–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä:",
                    options=[
                        "–ñ–µ–Ω—â–∏–Ω–∞, –ª—é–±–∏—Ç —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å",
                        "–ñ–µ–Ω—â–∏–Ω–∞, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
                        "–ú—É–∂—á–∏–Ω–∞, –¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å",
                        "–ú—É–∂—á–∏–Ω–∞, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Ç–∏–ø"
                    ],
                    key="partner_type"
                ),
                QuizQuestion(
                    id="relationship_stage",
                    category=QuizCategory.PSYCHOLOGICAL_TYPE,
                    text="üíñ –ö–∞–∫–æ–π —ç—Ç–∞–ø –æ—Ç–Ω–æ—à–µ–Ω–∏–π?",
                    options=[
                        "–ù–∞—á–∞–ª–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–π",
                        "–£—Å—Ç–æ—è–≤—à–∏–µ—Å—è –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
                        "–û—Å–æ–±—ã–π –ø–æ–≤–æ–¥/–≥–æ–¥–æ–≤—â–∏–Ω–∞",
                        "–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—è—Ç–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑"
                    ],
                    key="relationship_stage"
                )
            ],
            "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫": [
                QuizQuestion(
                    id="gift_recipient",
                    category=QuizCategory.BASIC_PROFILE,
                    text="üéÅ –î–ª—è –∫–æ–≥–æ –ø–æ–¥–∞—Ä–æ–∫?",
                    options=[
                        "–ö–æ–ª–ª–µ–≥–∞/–¥–µ–ª–æ–≤–æ–π –ø–∞—Ä—Ç–Ω–µ—Ä",
                        "–î—Ä—É–≥/–ø–æ–¥—Ä—É–≥–∞",
                        "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫",
                        "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ/—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ"
                    ],
                    key="gift_recipient"
                ),
                QuizQuestion(
                    id="gift_budget",
                    category=QuizCategory.PSYCHOLOGICAL_TYPE,
                    text="üí∞ –ö–∞–∫–∏–º –≤–∏–¥–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫?",
                    options=[
                        "–°–∫—Ä–æ–º–Ω—ã–π –∑–Ω–∞–∫ –≤–Ω–∏–º–∞–Ω–∏—è",
                        "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫",
                        "–†–æ—Å–∫–æ—à–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑",
                        "–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –≤—ã–±–æ—Ä"
                    ],
                    key="gift_budget"
                )
            ]
        }
    
    def get_next_question(self, current_answers: Dict[str, str], 
                         current_step: int) -> Optional[QuizQuestion]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π
        if current_step == 0:
            return self.questions[0]
        
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é, –¥–æ–±–∞–≤–ª—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        if current_step == 1 and "target_person" in current_answers:
            target = current_answers["target_person"]
            if target in self.adaptive_questions:
                adaptive_questions = self.adaptive_questions[target]
                if len(adaptive_questions) > 0:
                    return adaptive_questions[0]
        
        if current_step == 2 and "target_person" in current_answers:
            target = current_answers["target_person"]
            if target in self.adaptive_questions:
                adaptive_questions = self.adaptive_questions[target]
                if len(adaptive_questions) > 1:
                    return adaptive_questions[1]
        
        # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é –ª–æ–≥–∏–∫—É, –Ω–æ —Å–¥–≤–∏–≥–∞–µ–º –∏–Ω–¥–µ–∫—Å
        base_index = current_step - 2  # –£—á–∏—Ç—ã–≤–∞–µ–º 2 –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞
        if base_index >= 0 and base_index + 1 < len(self.questions):
            return self.questions[base_index + 1]
        
        return None
    
    def get_total_questions(self) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤"""
        return len(self.questions) + 2  # –ë–∞–∑–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã + 2 –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö
    
    def analyze_answers(self, answers: Dict[str, str]) -> Dict[str, Any]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π"""
        profile = {
            "basic_profile": self._analyze_basic_profile(answers),
            "psychological_type": self._analyze_psychological_type(answers),
            "scent_preferences": self._analyze_scent_preferences(answers),
            "usage_context": self._analyze_usage_context(answers),
            "personal_style": self._analyze_personal_style(answers),
            "weighted_preferences": self._calculate_weighted_preferences(answers),
            "consumer_archetype": self._determine_consumer_archetype(answers)
        }
        
        return profile
    
    def _analyze_basic_profile(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å"""
        return {
            "target": answers.get("target_person", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "personality": answers.get("personality_type", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        }
    
    def _analyze_psychological_type(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–∏–ø –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è"""
        return {
            "motivation": answers.get("consumer_type", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "innovation_attitude": answers.get("innovation_attitude", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        }
    
    def _analyze_scent_preferences(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∞—Ä–æ–º–∞—Ç–∞–º"""
        return {
            "family": answers.get("scent_family", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "intensity": answers.get("intensity_preference", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "longevity": answers.get("longevity_need", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        }
    
    def _analyze_usage_context(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        return {
            "primary_usage": answers.get("usage_context", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "seasonal": answers.get("seasonal_usage", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        }
    
    def _analyze_personal_style(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–∏—á–Ω—ã–π —Å—Ç–∏–ª—å"""
        return {
            "style": answers.get("style_preference", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "social_impact": answers.get("social_impact", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "quality_focus": answers.get("quality_focus", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        }
    
    def _determine_consumer_archetype(self, answers: Dict[str, str]) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∞—Ä—Ö–µ—Ç–∏–ø –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π"""
        motivation = answers.get("consumer_type", "")
        
        if "—Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ" in motivation.lower():
            return "Self-care Enthusiast"
        elif "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" in motivation.lower():
            return "Safety Seeker"
        elif "—É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å" in motivation.lower():
            return "Escapist Consumer"
        else:
            return "Confidence Builder"
    
    def _calculate_weighted_preferences(self, answers: Dict[str, str]) -> Dict[str, float]:
        """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –±–µ–∑ –≤–µ—Å–æ–≤"""
        # –í–µ—Å–∞ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–µ–ª–∞–µ—Ç –ò–ò
        return {}
    
    def create_recommendation_prompt(self, profile: Dict[str, Any], 
                                   available_perfumes: List[str],
                                   factory_analysis: Dict[str, Any]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        
        basic = profile.get("basic_profile", {})
        psychology = profile.get("psychological_type", {})
        scent_prefs = profile.get("scent_preferences", {})
        usage = profile.get("usage_context", {})
        style = profile.get("personal_style", {})
        archetype = profile.get("consumer_archetype", "")
        
        prompt = f"""
–í—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø–∞—Ä—Ñ—é–º–µ—Ä —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –ü–æ–¥–±–µ—Ä–∏—Ç–µ 3-4 –∏–¥–µ–∞–ª—å–Ω—ã—Ö –∞—Ä–æ–º–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞:

–ü–†–û–§–ò–õ–¨ –ö–õ–ò–ï–ù–¢–ê:
üé≠ –õ–∏—á–Ω–æ—Å—Ç—å: {basic.get('personality', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
üß† –¢–∏–ø –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è: {archetype}
üå∫ –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {scent_prefs.get('family', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
üí® –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: {scent_prefs.get('intensity', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
‚è∞ –°—Ç–æ–π–∫–æ—Å—Ç—å: {scent_prefs.get('longevity', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
üéØ –û—Å–Ω–æ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {usage.get('primary_usage', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
üëó –°—Ç–∏–ª—å: {style.get('style', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
üë• –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ: {style.get('social_impact', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –û–¢–í–ï–¢–£:
1. –ú–∞–∫—Å–∏–º—É–º 4 —ç–º–æ–¥–∑–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
2. –ë–ª–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –±–æ–ª–µ–µ 6 —Å—Ç—Ä–æ–∫
3. –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –º–µ–∂–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
4. –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã
5. –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞

         –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
         üéØ **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**
         
         1. [–ë—Ä–µ–Ω–¥] - [–ù–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞] ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
         –û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ (2-3 —Å—Ç—Ä–æ–∫–∏)
         üõí [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]
         
         ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
         
         2. [–ë—Ä–µ–Ω–¥] - [–ù–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞] ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
         –û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ (2-3 —Å—Ç—Ä–æ–∫–∏)
         üõí [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]
         
         –í–ê–ñ–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∞—Ä—Ç–∏–∫—É–ª –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ä–æ–º–∞—Ç—ã: {str(available_perfumes)[:1000]}...

–ê–Ω–∞–ª–∏–∑ —Ñ–∞–±—Ä–∏–∫: {str(factory_analysis)[:200]}...
"""
        
        return prompt

def create_quiz_system() -> PerfumeQuizSystem:
    """–°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–≤–∏–∑–∞"""
    return PerfumeQuizSystem()