#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from typing import Dict, List, Any, Optional
from dataclasses import dataclass
from enum import Enum

class QuizCategory(Enum):
    """–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–≤–∏–∑–∞"""
    TARGET_SELECTION = "target_selection"
    SCENT_PREFERENCES = "scent_preferences"
    INTENSITY_LONGEVITY = "intensity_longevity"
    USAGE_CONTEXT = "usage_context"
    PERSONAL_STYLE = "personal_style"
    OCCASION_MOOD = "occasion_mood"

@dataclass
class QuizQuestion:
    """–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞"""
    id: str
    category: QuizCategory
    text: str
    options: List[str]
    key: str
    depends_on: Optional[str] = None

class UniversalPerfumeQuizSystem:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–≤–∏–∑–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä—Ñ—é–º–æ–≤"""
    
    def __init__(self):
        self.questions = self._create_universal_quiz_questions()
        self.target_based_questions = self._create_target_based_questions()
        self.total_questions = 8  # –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    
    def _create_universal_quiz_questions(self) -> List[QuizQuestion]:
        """–°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        return [
            # –í–æ–ø—Ä–æ—Å 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã
            QuizQuestion(
                id="target_group",
                category=QuizCategory.TARGET_SELECTION,
                text="üë§ –î–ª—è –∫–æ–≥–æ –ø–æ–¥–±–∏—Ä–∞–µ–º –∞—Ä–æ–º–∞—Ç?",
                options=[
                    "–î–ª—è —Å–µ–±—è (–∂–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã)", 
                    "–î–ª—è —Å–µ–±—è (–º—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã)", 
                    "–î–ª—è —Å–µ–±—è (—É–Ω–∏—Å–µ–∫—Å –∞—Ä–æ–º–∞—Ç—ã)",
                    "–í –ø–æ–¥–∞—Ä–æ–∫ (–∂–µ–Ω—â–∏–Ω–µ)",
                    "–í –ø–æ–¥–∞—Ä–æ–∫ (–º—É–∂—á–∏–Ω–µ)",
                    "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫"
                ],
                key="target_group"
            ),
            
            # –í–æ–ø—Ä–æ—Å 2: –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–µ–º—å—è (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)
            QuizQuestion(
                id="scent_family",
                category=QuizCategory.SCENT_PREFERENCES,
                text="üå∫ –ö–∞–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤—è—Ç—Å—è?",
                options=[
                    "–°–≤–µ–∂–∏–µ –∏ –ª–µ–≥–∫–∏–µ (—Ü–∏—Ç—Ä—É—Å, –º–æ—Ä—Å–∫–æ–π –±—Ä–∏–∑)",
                    "–¶–≤–µ—Ç–æ—á–Ω—ã–µ –∏ –Ω–µ–∂–Ω—ã–µ (—Ä–æ–∑–∞, –∂–∞—Å–º–∏–Ω, –ø–∏–æ–Ω)",
                    "–î—Ä–µ–≤–µ—Å–Ω—ã–µ –∏ —Ç–µ–ø–ª—ã–µ (—Å–∞–Ω–¥–∞–ª, –∫–µ–¥—Ä, –≤–µ—Ç–∏–≤–µ—Ä)",
                    "–ü—Ä—è–Ω—ã–µ –∏ —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ (–∫–æ—Ä–∏—Ü–∞, –∫–∞—Ä–¥–∞–º–æ–Ω, –ø–µ—Ä–µ—Ü)",
                    "–°–ª–∞–¥–∫–∏–µ –∏ —É—é—Ç–Ω—ã–µ (–≤–∞–Ω–∏–ª—å, –∫–∞—Ä–∞–º–µ–ª—å, –º–µ–¥)",
                    "–°–≤–µ–∂–∏–µ —Ç—Ä–∞–≤—è–Ω—ã–µ (–ª–∞–≤–∞–Ω–¥–∞, –º—è—Ç–∞, –±–∞–∑–∏–ª–∏–∫)"
                ],
                key="scent_family"
            ),
            
            # –í–æ–ø—Ä–æ—Å 3: –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä
            QuizQuestion(
                id="intensity_character",
                category=QuizCategory.INTENSITY_LONGEVITY,
                text="üí® –ö–∞–∫–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∞—Ä–æ–º–∞—Ç–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ?",
                options=[
                    "–î–µ–ª–∏–∫–∞—Ç–Ω—ã–π –∏ –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤—ã–π",
                    "–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å –ø—Ä–∏—è—Ç–Ω—ã–º —à–ª–µ–π—Ñ–æ–º",
                    "–Ø—Ä–∫–∏–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è",
                    "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –∏ –¥–æ–ª–≥–æ–∏–≥—Ä–∞—é—â–∏–π"
                ],
                key="intensity_character"
            ),
            
            # –í–æ–ø—Ä–æ—Å 4: –û—Å–Ω–æ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
            QuizQuestion(
                id="primary_usage",
                category=QuizCategory.USAGE_CONTEXT,
                text="üéØ –í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö —á–∞—â–µ –≤—Å–µ–≥–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?",
                options=[
                    "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ (—Ä–∞–±–æ—Ç–∞, —É—á–µ–±–∞, –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–ª–∞)",
                    "–û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ (—Å–≤–∏–¥–∞–Ω–∏—è, —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞, –≤—Å—Ç—Ä–µ—á–∏)",
                    "–í–µ—á–µ—Ä–Ω–∏–µ –≤—ã—Ö–æ–¥—ã (—Ç–µ–∞—Ç—Ä, —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è)",
                    "–î–æ–º–∞ –¥–ª—è —Å–µ–±—è (—Ä–µ–ª–∞–∫—Å, —É—é—Ç, –ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è)",
                    "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö (—Å–ø–æ—Ä—Ç, –ø—Ä–æ–≥—É–ª–∫–∏, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è)"
                ],
                key="primary_usage"
            ),
            
            # –í–æ–ø—Ä–æ—Å 5: –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å
            QuizQuestion(
                id="seasonal_preference",
                category=QuizCategory.USAGE_CONTEXT,
                text="üå°Ô∏è –ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç?",
                options=[
                    "–ö—Ä—É–≥–ª—ã–π –≥–æ–¥ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)",
                    "–í–µ—Å–Ω–∞-–ª–µ—Ç–æ (–ª–µ–≥–∫–∏–µ, –æ—Å–≤–µ–∂–∞—é—â–∏–µ)",
                    "–û—Å–µ–Ω—å-–∑–∏–º–∞ (—Ç–µ–ø–ª—ã–µ, —É—é—Ç–Ω—ã–µ)",
                    "–ü–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é (—Ä–∞–∑–Ω—ã–µ –∞—Ä–æ–º–∞—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–Ω–µ–π)"
                ],
                key="seasonal_preference"
            ),
            
            # –í–æ–ø—Ä–æ—Å 6: –°—Ç–∏–ª—å –∏ –∏–º–∏–¥–∂
            QuizQuestion(
                id="style_image",
                category=QuizCategory.PERSONAL_STYLE,
                text="‚ú® –ö–∞–∫–æ–π –æ–±—Ä–∞–∑ —Ö–æ—á–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –∞—Ä–æ–º–∞—Ç–∞?",
                options=[
                    "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∏ —É—Ç–æ–Ω—á–µ–Ω–Ω—ã–π",
                    "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ —Å—Ç–∏–ª—å–Ω—ã–π",
                    "–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∏ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π",
                    "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω—ã–π",
                    "–°–ø–æ–∫–æ–π–Ω—ã–π –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–π",
                    "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π"
                ],
                key="style_image"
            ),
            
            # –í–æ–ø—Ä–æ—Å 7: –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —ç–º–æ—Ü–∏–∏
            QuizQuestion(
                id="mood_emotion",
                category=QuizCategory.OCCASION_MOOD,
                text="üé≠ –ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç?",
                options=[
                    "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–∏–ª—É",
                    "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ",
                    "–†–∞–¥–æ—Å—Ç—å –∏ –ø–æ–∑–∏—Ç–∏–≤",
                    "–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –Ω–µ–∂–Ω–æ—Å—Ç—å",
                    "–≠–Ω–µ—Ä–≥–∏—é –∏ –±–æ–¥—Ä–æ—Å—Ç—å",
                    "–ó–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏—Ç—è–≥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
                ],
                key="mood_emotion"
            ),
            
            # –í–æ–ø—Ä–æ—Å 8: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
            QuizQuestion(
                id="selection_priority",
                category=QuizCategory.PERSONAL_STYLE,
                text="‚≠ê –ß—Ç–æ –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∞—Ä–æ–º–∞—Ç–∞?",
                options=[
                    "–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å",
                    "–°—Ç–æ–π–∫–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å",
                    "–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤",
                    "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å",
                    "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–æ–¥–Ω—ã–º —Ç—Ä–µ–Ω–¥–∞–º",
                    "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ"
                ],
                key="selection_priority"
            )
        ]
    
    def _create_target_based_questions(self) -> Dict[str, List[QuizQuestion]]:
        """–°–æ–∑–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
        return {
            "–î–ª—è —Å–µ–±—è (–∂–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã)": [
                QuizQuestion(
                    id="feminine_occasion",
                    category=QuizCategory.OCCASION_MOOD,
                    text="üíÉ –í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ?",
                    options=[
                        "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏ –¥–µ–ª–æ–≤—ã–µ –≤—Å—Ç—Ä–µ—á–∏",
                        "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–∏–¥–∞–Ω–∏—è",
                        "–°–≤–µ—Ç—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –≤–µ—á–µ—Ä–∏–Ω–∫–∏",
                        "–î–æ–º–∞—à–Ω–∏–π —É—é—Ç –∏ –ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è"
                    ],
                    key="feminine_occasion"
                )
            ],
            
            "–î–ª—è —Å–µ–±—è (–º—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã)": [
                QuizQuestion(
                    id="masculine_occasion",
                    category=QuizCategory.OCCASION_MOOD,
                    text="ü§µ –í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ?",
                    options=[
                        "–û—Ñ–∏—Å –∏ –¥–µ–ª–æ–≤–∞—è —Å—Ä–µ–¥–∞",
                        "–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö",
                        "–í–µ—á–µ—Ä–Ω–∏–µ –≤—ã—Ö–æ–¥—ã –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
                        "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –∂–∏–∑–Ω—å"
                    ],
                    key="masculine_occasion"
                )
            ],
            
            "–î–ª—è —Å–µ–±—è (—É–Ω–∏—Å–µ–∫—Å –∞—Ä–æ–º–∞—Ç—ã)": [
                QuizQuestion(
                    id="unisex_preference",
                    category=QuizCategory.SCENT_PREFERENCES,
                    text="üéØ –ö–∞–∫–æ–π —Å—Ç–∏–ª—å –∞—Ä–æ–º–∞—Ç–æ–≤ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ?",
                    options=[
                        "–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏ —á–∏—Å—Ç—ã–µ",
                        "–°–ª–æ–∂–Ω—ã–µ –∏ –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω—ã–µ",
                        "–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ",
                        "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∞–≤–∞–Ω–≥–∞—Ä–¥–Ω—ã–µ"
                    ],
                    key="unisex_preference"
                )
            ],
            
            "–í –ø–æ–¥–∞—Ä–æ–∫ (–∂–µ–Ω—â–∏–Ω–µ)": [
                QuizQuestion(
                    id="gift_woman_relationship",
                    category=QuizCategory.USAGE_CONTEXT,
                    text="üíï –ö–æ–º—É –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –ø–æ–¥–∞—Ä–æ–∫?",
                    options=[
                        "–ü–∞—Ä—Ç–Ω–µ—Ä—à–µ/–∂–µ–Ω–µ",
                        "–ú–∞–º–µ/—Å–µ—Å—Ç—Ä–µ/—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü–µ",
                        "–ü–æ–¥—Ä—É–≥–µ/–∫–æ–ª–ª–µ–≥–µ",
                        "–ó–Ω–∞–∫–æ–º–æ–π (—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫)"
                    ],
                    key="gift_woman_relationship"
                )
            ],
            
            "–í –ø–æ–¥–∞—Ä–æ–∫ (–º—É–∂—á–∏–Ω–µ)": [
                QuizQuestion(
                    id="gift_man_relationship",
                    category=QuizCategory.USAGE_CONTEXT,
                    text="üéÅ –ö–æ–º—É –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –ø–æ–¥–∞—Ä–æ–∫?",
                    options=[
                        "–ü–∞—Ä—Ç–Ω–µ—Ä—É/–º—É–∂—É",
                        "–ü–∞–ø–µ/–±—Ä–∞—Ç—É/—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É",
                        "–î—Ä—É–≥—É/–∫–æ–ª–ª–µ–≥–µ",
                        "–ó–Ω–∞–∫–æ–º–æ–º—É (—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫)"
                    ],
                    key="gift_man_relationship"
                )
            ],
            
            "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫": [
                QuizQuestion(
                    id="universal_gift_type",
                    category=QuizCategory.USAGE_CONTEXT,
                    text="üé™ –ö–∞–∫–æ–π —Ç–∏–ø –ø–æ–¥–∞—Ä–∫–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ?",
                    options=[
                        "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä",
                        "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –ø—Ä–µ—Å—Ç–∏–∂–Ω—ã–π",
                        "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è",
                        "–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π"
                    ],
                    key="universal_gift_type"
                )
            ]
        }
    
    def get_next_question(self, current_answers: Dict[str, str], 
                         current_step: int) -> Optional[QuizQuestion]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (0-7)
        if current_step < len(self.questions):
            return self.questions[current_step]
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã (—à–∞–≥ 8)
        if current_step == 8 and "target_group" in current_answers:
            target = current_answers["target_group"]
            if target in self.target_based_questions:
                additional_questions = self.target_based_questions[target]
                if additional_questions:
                    return additional_questions[0]
        
        return None
    
    def get_total_questions(self) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤"""
        return 9  # 8 –æ—Å–Ω–æ–≤–Ω—ã—Ö + 1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π
    
    def analyze_answers(self, answers: Dict[str, str]) -> Dict[str, Any]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π"""
        profile = {
            "target_analysis": self._analyze_target_group(answers),
            "scent_profile": self._analyze_scent_preferences(answers),
            "usage_profile": self._analyze_usage_context(answers),
            "personality_profile": self._analyze_personality_traits(answers),
            "recommendation_focus": self._determine_recommendation_focus(answers),
            "raw_answers": answers
        }
        
        return profile
    
    def _analyze_target_group(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É"""
        target = answers.get("target_group", "")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if "–∂–µ–Ω—Å–∫–∏–µ" in target:
            gender_focus = "–∂–µ–Ω—Å–∫–∏–µ"
        elif "–º—É–∂—Å–∫–∏–µ" in target:
            gender_focus = "–º—É–∂—Å–∫–∏–µ"
        elif "—É–Ω–∏—Å–µ–∫—Å" in target:
            gender_focus = "—É–Ω–∏—Å–µ–∫—Å"
        else:
            gender_focus = "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ"
        
        is_gift = "–ø–æ–¥–∞—Ä–æ–∫" in target.lower()
        
        return {
            "target": target,
            "gender_focus": gender_focus,
            "is_gift": "–¥–∞" if is_gift else "–Ω–µ—Ç",
            "purchase_type": "–ø–æ–¥–∞—Ä–æ–∫" if is_gift else "–¥–ª—è —Å–µ–±—è"
        }
    
    def _analyze_scent_preferences(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∞—Ä–æ–º–∞—Ç–∞–º"""
        family = answers.get("scent_family", "")
        intensity = answers.get("intensity_character", "")
        
        # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–µ–º—å—é
        if "—Å–≤–µ–∂–∏–µ –∏ –ª–µ–≥–∫–∏–µ" in family.lower():
            family_type = "fresh"
        elif "—Ü–≤–µ—Ç–æ—á–Ω—ã–µ" in family.lower():
            family_type = "floral"
        elif "–¥—Ä–µ–≤–µ—Å–Ω—ã–µ" in family.lower():
            family_type = "woody"
        elif "–ø—Ä—è–Ω—ã–µ" in family.lower():
            family_type = "spicy"
        elif "—Å–ª–∞–¥–∫–∏–µ" in family.lower():
            family_type = "gourmand"
        elif "—Ç—Ä–∞–≤—è–Ω—ã–µ" in family.lower():
            family_type = "aromatic"
        else:
            family_type = "mixed"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏
        if "–¥–µ–ª–∏–∫–∞—Ç–Ω—ã–π" in intensity.lower():
            intensity_level = "light"
        elif "—É–º–µ—Ä–µ–Ω–Ω—ã–π" in intensity.lower():
            intensity_level = "moderate"
        elif "—è—Ä–∫–∏–π" in intensity.lower():
            intensity_level = "strong"
        elif "–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π" in intensity.lower():
            intensity_level = "intense"
        else:
            intensity_level = "moderate"
        
        return {
            "family": family,
            "family_type": family_type,
            "intensity": intensity,
            "intensity_level": intensity_level
        }
    
    def _analyze_usage_context(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        usage = answers.get("primary_usage", "")
        seasonal = answers.get("seasonal_preference", "")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if "–µ–∂–µ–¥–Ω–µ–≤–Ω–æ" in usage.lower():
            context = "daily"
        elif "–æ—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏" in usage.lower():
            context = "special"
        elif "–≤–µ—á–µ—Ä–Ω–∏–µ" in usage.lower():
            context = "evening"
        elif "–¥–æ–º–∞" in usage.lower():
            context = "home"
        elif "–∞–∫—Ç–∏–≤–Ω—ã–π" in usage.lower():
            context = "sport"
        else:
            context = "versatile"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å
        if "–∫—Ä—É–≥–ª—ã–π –≥–æ–¥" in seasonal.lower():
            season = "all_year"
        elif "–≤–µ—Å–Ω–∞-–ª–µ—Ç–æ" in seasonal.lower():
            season = "warm"
        elif "–æ—Å–µ–Ω—å-–∑–∏–º–∞" in seasonal.lower():
            season = "cold"
        else:
            season = "flexible"
        
        return {
            "primary_usage": usage,
            "usage_context": context,
            "seasonal": seasonal,
            "season_type": season
        }
    
    def _analyze_personality_traits(self, answers: Dict[str, str]) -> Dict[str, str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"""
        style = answers.get("style_image", "")
        mood = answers.get("mood_emotion", "")
        priority = answers.get("selection_priority", "")
        
        return {
            "style_image": style,
            "desired_mood": mood,
            "selection_priority": priority
        }
    
    def _determine_recommendation_focus(self, answers: Dict[str, str]) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ–æ–∫—É—Å –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        target = answers.get("target_group", "")
        family = answers.get("scent_family", "")
        usage = answers.get("primary_usage", "")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ò–ò
        focus_keywords = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–Ω–¥–µ—Ä–Ω—ã–π —Ñ–æ–∫—É—Å
        if "–∂–µ–Ω—Å–∫–∏–µ" in target:
            focus_keywords.append("feminine")
        elif "–º—É–∂—Å–∫–∏–µ" in target:
            focus_keywords.append("masculine")
        elif "—É–Ω–∏—Å–µ–∫—Å" in target:
            focus_keywords.append("unisex")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å
        if "—Å–≤–µ–∂–∏–µ" in family.lower():
            focus_keywords.append("fresh")
        elif "—Ü–≤–µ—Ç–æ—á–Ω—ã–µ" in family.lower():
            focus_keywords.append("floral")
        elif "–¥—Ä–µ–≤–µ—Å–Ω—ã–µ" in family.lower():
            focus_keywords.append("woody")
        elif "—Å–ª–∞–¥–∫–∏–µ" in family.lower():
            focus_keywords.append("sweet")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if "–µ–∂–µ–¥–Ω–µ–≤–Ω–æ" in usage.lower():
            focus_keywords.append("daily_wear")
        elif "–æ—Å–æ–±—ã–µ" in usage.lower():
            focus_keywords.append("special_occasions")
        elif "–≤–µ—á–µ—Ä–Ω–∏–µ" in usage.lower():
            focus_keywords.append("evening_wear")
        
        return " + ".join(focus_keywords)
    
    def create_recommendation_prompt(self, profile: Dict[str, Any], 
                                   available_perfumes: List[str],
                                   factory_analysis: Dict[str, Any]) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        
        target = profile.get("target_analysis", {})
        scent = profile.get("scent_profile", {})
        usage = profile.get("usage_profile", {})
        personality = profile.get("personality_profile", {})
        focus = profile.get("recommendation_focus", "")
        
        prompt = f"""
–í—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø–∞—Ä—Ñ—é–º–µ—Ä. –ü–æ–¥–±–µ—Ä–∏—Ç–µ 3-4 –∏–¥–µ–∞–ª—å–Ω—ã—Ö –∞—Ä–æ–º–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:

–ü–†–û–§–ò–õ–¨ –ö–õ–ò–ï–ù–¢–ê:
üéØ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {target.get('target', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} ({target.get('gender_focus', '—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ')})
üå∫ –ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {scent.get('family', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} (—Ç–∏–ø: {scent.get('family_type', '—Å–º–µ—à–∞–Ω–Ω—ã–π')})
üí® –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: {scent.get('intensity', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} (—É—Ä–æ–≤–µ–Ω—å: {scent.get('intensity_level', '—É–º–µ—Ä–µ–Ω–Ω—ã–π')})
üéØ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {usage.get('primary_usage', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} (–∫–æ–Ω—Ç–µ–∫—Å—Ç: {usage.get('usage_context', '—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π')})
üå°Ô∏è –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å: {usage.get('seasonal', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} (—Ç–∏–ø: {usage.get('season_type', '–≥–∏–±–∫–∏–π')})
‚ú® –ñ–µ–ª–∞–µ–º—ã–π –æ–±—Ä–∞–∑: {personality.get('style_image', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {personality.get('desired_mood', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}
‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {personality.get('selection_priority', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}

–§–û–ö–£–° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò: {focus}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –û–¢–í–ï–¢–£:
1. –ú–∞–∫—Å–∏–º—É–º 4 —ç–º–æ–¥–∑–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
2. –ö—Ä–∞—Ç–∫–∏–µ –±–ª–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ (–Ω–µ –±–æ–ª–µ–µ 5 —Å—Ç—Ä–æ–∫)
3. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∞—Ä—Ç–∏–∫—É–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ê—Ä—Ç–∏–∫—É–ª: XXX]
4. –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞ (2-3 —Å—Ç—Ä–æ–∫–∏)

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**

1. [–ë—Ä–µ–Ω–¥] [–ù–∞–∑–≤–∞–Ω–∏–µ] ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞
üõí [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

2. [–ë—Ä–µ–Ω–¥] [–ù–∞–∑–≤–∞–Ω–∏–µ] ([–§–∞–±—Ä–∏–∫–∞]) [–ê—Ä—Ç–∏–∫—É–ª: XXX]
–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞
üõí [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ä–æ–º–∞—Ç—ã: {str(available_perfumes)[:1000]}...

–ê–Ω–∞–ª–∏–∑ —Ñ–∞–±—Ä–∏–∫: {str(factory_analysis)[:200]}...
"""
        
        return prompt

def create_quiz_system() -> UniversalPerfumeQuizSystem:
    """–°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä —É–ª—É—á—à–µ–Ω–Ω–æ–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–≤–∏–∑–∞"""
    return UniversalPerfumeQuizSystem()