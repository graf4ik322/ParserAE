#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Perfume Consultant Bot v2.0 - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞

–ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –≤–∫–ª—é—á–∞—é—â–∞—è:
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
- Telegram –±–æ—Ç —Å –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º  
- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
- –°–∏—Å—Ç–µ–º—É –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import asyncio
import sys
import signal
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from perfume_bot import PerfumeApplication, setup_logging, get_logger

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
setup_logging()
logger = get_logger("perfume_bot.main")

class GracefulShutdown:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ graceful shutdown"""
    
    def __init__(self, app: PerfumeApplication):
        self.app = app
        self.shutdown_event = asyncio.Event()
    
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        logger.info(f"üì∂ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –Ω–∞—á–∏–Ω–∞—é graceful shutdown...")
        self.shutdown_event.set()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Perfume Consultant Bot v2.0")
    logger.info("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = PerfumeApplication()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º graceful shutdown
    shutdown_handler = GracefulShutdown(app)
    signal.signal(signal.SIGINT, shutdown_handler.signal_handler)
    signal.signal(signal.SIGTERM, shutdown_handler.signal_handler)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        await app.initialize()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...")
        if not await app.data_manager.has_data():
            logger.info("üì• –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –≤—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–≤–∏—á–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É...")
            success = await app.parse_and_update_data(force=True)
            if not success:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É")
                return 1
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        status = await app.get_status()
        logger.info("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:")
        logger.info(f"   ‚Ä¢ –ü–∞—Ä—Ñ—é–º–æ–≤ –≤ –±–∞–∑–µ: {status['data'].get('total_perfumes', 0)}")
        logger.info(f"   ‚Ä¢ –ë—Ä–µ–Ω–¥–æ–≤: {status['data'].get('total_brands', 0)}")
        logger.info(f"   ‚Ä¢ –§–∞–±—Ä–∏–∫: {status['data'].get('total_factories', 0)}")
        logger.info(f"   ‚Ä¢ –û–∫—Ä—É–∂–µ–Ω–∏–µ: {status['config']['environment']}")
        
        logger.info("ü§ñ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ—Ç–æ–≤—ã, –∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
        logger.info("=" * 60)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –∏ –∂–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        bot_task = asyncio.create_task(app.run_bot())
        shutdown_task = asyncio.create_task(shutdown_handler.shutdown_event.wait())
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–¥–Ω–æ–π –∏–∑ –∑–∞–¥–∞—á
        done, pending = await asyncio.wait(
            [bot_task, shutdown_task],
            return_when=asyncio.FIRST_COMPLETED
        )
        
        # –û—Ç–º–µ–Ω—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–¥–∞—á–∏
        for task in pending:
            task.cancel()
            try:
                await task
            except asyncio.CancelledError:
                pass
        
        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return 0
        
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω Ctrl+C, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
        return 0
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.exception("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        return 1

def run_data_update():
    """–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑ –±–æ—Ç–∞)"""
    logger.info("üîÑ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
    
    async def update_only():
        app = PerfumeApplication()
        await app.initialize()
        success = await app.parse_and_update_data(force=True)
        return 0 if success else 1
    
    return asyncio.run(update_only())

def show_status():
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
    logger.info("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    async def status_only():
        app = PerfumeApplication()
        await app.initialize()
        status = await app.get_status()
        
        print("\nü§ñ Perfume Consultant Bot - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
        print("=" * 50)
        print(f"–í–µ—Ä—Å–∏—è: {status['application']['version']}")
        print(f"–û–∫—Ä—É–∂–µ–Ω–∏–µ: {status['config']['environment']}")
        print(f"–ü–∞—Ä—Ñ—é–º–æ–≤ –≤ –±–∞–∑–µ: {status['data'].get('total_perfumes', 0)}")
        print(f"–ë—Ä–µ–Ω–¥–æ–≤: {status['data'].get('total_brands', 0)}")
        print(f"–§–∞–±—Ä–∏–∫: {status['data'].get('total_factories', 0)}")
        print(f"–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {status['config']['update_interval']} —á–∞—Å–æ–≤")
        print("=" * 50)
        
        return 0
    
    return asyncio.run(status_only())

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()
        
        if command == "update":
            sys.exit(run_data_update())
        elif command == "status":
            sys.exit(show_status())
        elif command == "help":
            print("\nü§ñ Perfume Consultant Bot v2.0")
            print("=" * 40)
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python run_perfume_bot.py         - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
            print("  python run_perfume_bot.py update  - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
            print("  python run_perfume_bot.py status  - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
            print("  python run_perfume_bot.py help    - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
            print("=" * 40)
            sys.exit(0)
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
            sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    try:
        exit_code = asyncio.run(main())
        sys.exit(exit_code)
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ Ctrl+C")
        sys.exit(0)
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)