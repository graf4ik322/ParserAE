#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot.api.openrouter_client import OpenRouterClient, APIResponse
from config import OPENROUTER_API_KEY, OPENROUTER_CONFIG
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenRouter API...")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = OpenRouterClient(
        api_key=OPENROUTER_API_KEY,
        model=OPENROUTER_CONFIG['model']
    )
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞...")
    key_check = await client.check_api_key()
    if key_check.success:
        print("‚úÖ API –∫–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
        if key_check.usage:
            print(f"üìä –î–∞–Ω–Ω—ã–µ –∫–ª—é—á–∞: {key_check.usage}")
    else:
        print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º: {key_check.error}")
        return
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ AI...")
    test_response = await client.simple_completion(
        prompt="–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.",
        system_message="–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.",
        max_tokens=100,
        temperature=0.7
    )
    
    if test_response.success:
        print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìù –û—Ç–≤–µ—Ç: {test_response.content}")
        if test_response.usage:
            print(f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤: {test_response.usage}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {test_response.error}")
        return
    
    # –¢–µ—Å—Ç 3: –ü–∞—Ä—Ñ—é–º–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å...")
    perfume_response = await client.simple_completion(
        prompt="–ü–æ—Å–æ–≤–µ—Ç—É–π –º–Ω–µ —Å–≤–µ–∂–∏–π –ª–µ—Ç–Ω–∏–π –∞—Ä–æ–º–∞—Ç –¥–ª—è –º—É–∂—á–∏–Ω",
        system_message="–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–∞—Ä—Ñ—é–º–µ—Ä. –î–∞–π –∫—Ä–∞—Ç–∫–∏–π —Å–æ–≤–µ—Ç.",
        max_tokens=200,
        temperature=0.7
    )
    
    if perfume_response.success:
        print("‚úÖ –ü–∞—Ä—Ñ—é–º–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìù –û—Ç–≤–µ—Ç: {perfume_response.content}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {perfume_response.error}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_api())