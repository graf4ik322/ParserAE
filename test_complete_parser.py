#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞
from complete_parser_with_details import CompleteParfumeParser
import json

def test_complete_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ç–æ–≤–∞—Ä–æ–≤"""
    
    parser = CompleteParfumeParser(max_workers=2)  # 2 –ø–æ—Ç–æ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞...")
    print("üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫")
    print("-" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞
        catalog_url = f"{parser.base_url}/perfume/"
        page_perfumes = parser.parse_catalog_page(catalog_url)
        
        # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_perfumes = page_perfumes[:5]
        print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ {len(test_perfumes)} —Ç–æ–≤–∞—Ä–∞—Ö...")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        completed_perfumes = []
        for i, perfume in enumerate(test_perfumes, 1):
            print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–≤–∞—Ä {i}/{len(test_perfumes)}: {perfume['full_title']}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ—Ç–∞–ª–∏
            details = parser.extract_product_details(perfume['url'])
            perfume['details'] = details
            completed_perfumes.append(perfume)
            
            # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print(f"   ‚úÖ –ê—Ä—Ç–∏–∫—É–ª: {details.get('article', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"   ‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ: {details.get('quality', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
            print(f"   ‚úÖ –ë—Ä–µ–Ω–¥: {details.get('brand_detailed', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"   ‚úÖ –ü–æ–ª: {details.get('gender', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"   ‚úÖ –ì—Ä—É–ø–ø–∞ –∞—Ä–æ–º–∞—Ç–∞: {details.get('fragrance_group', '–ù–µ –Ω–∞–π–¥–µ–Ω–∞')}")
            print(f"   ‚úÖ –§–∞–±—Ä–∏–∫–∞: {details.get('factory_detailed', '–ù–µ –Ω–∞–π–¥–µ–Ω–∞')}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_data = {
            'test_metadata': {
                'test_date': '2025-07-30',
                'test_count': len(completed_perfumes),
                'test_version': 'complete-test-1.0'
            },
            'test_perfumes': completed_perfumes
        }
        
        with open('test_complete_results.json', 'w', encoding='utf-8') as f:
            json.dump(test_data, f, ensure_ascii=False, indent=2)
        
        print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: test_complete_results.json")
        print(f"üìä –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(completed_perfumes)}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        successful_extractions = sum(1 for p in completed_perfumes if p['details'].get('article'))
        print(f"üìà –£—Å–ø–µ—à–Ω—ã—Ö –∏–∑–≤–ª–µ—á–µ–Ω–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {successful_extractions}/{len(completed_perfumes)}")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_complete_parser()